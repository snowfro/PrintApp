{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Desktop/punkprintapp/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PriceList from \"./priceList\";\nimport WelcomeScreen from \"./welcomeScreen\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      drizzleState: null,\n      welcomeState: true\n    };\n    this.handleWelcomeChange = this.handleWelcomeChange.bind(this);\n  }\n\n  componentDidMount() {\n    const drizzle = this.props.drizzle; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  compomentWillUnmount() {\n    this.unsubscribe(); //\n  }\n\n  handleWelcomeChange() {\n    this.setState({\n      welcomeState: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    console.log(this.state.welcomeState);\n\n    if (this.state.welcomeState) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(WelcomeScreen, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        handleWelcomeChange: this.handleWelcomeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(PriceList, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Erick/Desktop/punkprintapp/client/src/App.js"],"names":["React","Component","PriceList","WelcomeScreen","App","constructor","props","state","loading","drizzleState","welcomeState","handleWelcomeChange","bind","componentDidMount","drizzle","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","compomentWillUnmount","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAE,IAA/B;AAAqCC,MAAAA,YAAY,EAAE;AAAnD,KAAb;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AACCC,EAAAA,iBAAiB,GAAG;AAAA,UAEVC,OAFU,GAEE,KAAKR,KAFP,CAEVQ,OAFU,EAGlB;;AACA,SAAKC,WAAL,GAAmBD,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwB,MAAM;AAC/C;AACA,YAAMR,YAAY,GAAGK,OAAO,CAACE,KAAR,CAAcE,QAAd,EAArB,CAF+C,CAG/C;;AACA,UAAIT,YAAY,CAACU,aAAb,CAA2BC,WAA/B,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAEb,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA;AAAlB,SAAd;AACD;AAEF,KARkB,CAAnB;AASD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAKP,WAAL,GADqB,CAErB;AACD;;AAEHJ,EAAAA,mBAAmB,GAAE;AACnB,SAAKU,QAAL,CAAc;AAACX,MAAAA,YAAY,EAAC;AAAd,KAAd;AACD;;AAIDa,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKhB,KAAL,CAAWC,OAAf,EAAwB,OAAO,oBAAP;AAE1BgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,YAAvB;;AAEE,QAAI,KAAKH,KAAL,CAAWG,YAAf,EAA4B;AAC5B,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACA,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWQ,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKP,KAAL,CAAWE,YAFzB;AAGA,QAAA,mBAAmB,EAAE,KAAKE,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD,KAXC,MAWK;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACA,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWQ,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKP,KAAL,CAAWE,YAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA;AAQD;AAEA;;AA3D2B;;AA6D5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport PriceList from \"./priceList\";\nimport WelcomeScreen from \"./welcomeScreen\";\n\nclass App extends Component {\n  constructor(props){\n  super(props);\n  this.state = { loading: true, drizzleState: null, welcomeState: true};\n  this.handleWelcomeChange = this.handleWelcomeChange.bind(this);\n}\n  componentDidMount() {\n\n    const { drizzle } = this.props;\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n\n    });\n  }\n\n  compomentWillUnmount() {\n    this.unsubscribe();\n    //\n  }\n\nhandleWelcomeChange(){\n  this.setState({welcomeState:false});\n}\n\n\n\nrender(){\n  if (this.state.loading) return \"Loading Drizzle...\";\n\nconsole.log(this.state.welcomeState);\n\n  if (this.state.welcomeState){\n  return(\n    <div className=\"App\">\n      <WelcomeScreen\n      drizzle={this.props.drizzle}\n      drizzleState={this.state.drizzleState}\n      handleWelcomeChange={this.handleWelcomeChange}\n\n      />\n      </div>\n  )\n} else {\n  return (\n  <div>\n  <PriceList\n  drizzle={this.props.drizzle}\n  drizzleState={this.state.drizzleState}\n  />\n  </div>\n)\n}\n\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}