{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Desktop/punkprintapp/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PriceList from \"./priceList\";\nimport WelcomeScreen from \"./welcomeScreen\";\nimport GetContact from \"./getContact\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      drizzleState: null,\n      welcomeState: true,\n      contactMethod: ''\n    };\n    this.handleWelcomeChange = this.handleWelcomeChange.bind(this);\n    this.addContactMethod = this.addContactMethod.bind(this);\n  }\n\n  componentDidMount() {\n    const drizzle = this.props.drizzle; // subscribe to changes in the store\n\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState(); // check to see if it's ready, if so, update local component state\n\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({\n          loading: false,\n          drizzleState\n        });\n      }\n    });\n  }\n\n  compomentWillUnmount() {\n    this.unsubscribe(); //\n  }\n\n  handleWelcomeChange() {\n    this.setState({\n      welcomeState: !this.state.welcomeState\n    });\n  }\n\n  addContactMethod(contactMethod) {\n    this.setState({\n      contactMethod: contactMethod\n    });\n  }\n\n  render() {\n    if (this.state.loading) return \"Loading Drizzle...\";\n    console.log(this.state.welcomeState);\n\n    if (this.state.welcomeState) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(WelcomeScreen, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        handleWelcomeChange: this.handleWelcomeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GetContact, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        addContactMethod: this.addContactMethod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(PriceList, {\n        drizzle: this.props.drizzle,\n        drizzleState: this.state.drizzleState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Erick/Desktop/punkprintapp/client/src/App.js"],"names":["React","Component","PriceList","WelcomeScreen","GetContact","App","constructor","props","state","loading","drizzleState","welcomeState","contactMethod","handleWelcomeChange","bind","addContactMethod","componentDidMount","drizzle","unsubscribe","store","subscribe","getState","drizzleStatus","initialized","setState","compomentWillUnmount","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAE,IAA/B;AAAqCC,MAAAA,YAAY,EAAE,IAAnD;AAAyDC,MAAAA,aAAa,EAAE;AAAxE,KAAb;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACCE,EAAAA,iBAAiB,GAAG;AAAA,UAEVC,OAFU,GAEE,KAAKV,KAFP,CAEVU,OAFU,EAGlB;;AACA,SAAKC,WAAL,GAAmBD,OAAO,CAACE,KAAR,CAAcC,SAAd,CAAwB,MAAM;AAC/C;AACA,YAAMV,YAAY,GAAGO,OAAO,CAACE,KAAR,CAAcE,QAAd,EAArB,CAF+C,CAG/C;;AACA,UAAIX,YAAY,CAACY,aAAb,CAA2BC,WAA/B,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AAAEf,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA;AAAlB,SAAd;AACD;AAEF,KARkB,CAAnB;AASD;;AAEDe,EAAAA,oBAAoB,GAAG;AACrB,SAAKP,WAAL,GADqB,CAErB;AACD;;AAEHL,EAAAA,mBAAmB,GAAE;AAEnB,SAAKW,QAAL,CAAc;AAACb,MAAAA,YAAY,EAAC,CAAC,KAAKH,KAAL,CAAWG;AAA1B,KAAd;AACD;;AAEDI,EAAAA,gBAAgB,CAACH,aAAD,EAAe;AAC7B,SAAKY,QAAL,CAAc;AAACZ,MAAAA,aAAa,EAACA;AAAf,KAAd;AACD;;AAIDc,EAAAA,MAAM,GAAE;AACN,QAAI,KAAKlB,KAAL,CAAWC,OAAf,EAAwB,OAAO,oBAAP;AAE1BkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWG,YAAvB;;AAEE,QAAI,KAAKH,KAAL,CAAWG,YAAf,EAA4B;AAC5B,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACA,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWU,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWE,YAFzB;AAGA,QAAA,mBAAmB,EAAE,KAAKG,mBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAUD,KAXC,MAWK;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,UAAD;AACA,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWU,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWE,YAFzB;AAGA,QAAA,gBAAgB,EAAI,KAAKK,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOA,oBAAC,SAAD;AACA,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWU,OADpB;AAEA,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWE,YAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADA;AAcD;AAEA;;AAvE2B;;AAyE5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport PriceList from \"./priceList\";\nimport WelcomeScreen from \"./welcomeScreen\";\nimport GetContact from \"./getContact\";\n\nclass App extends Component {\n  constructor(props){\n  super(props);\n  this.state = { loading: true, drizzleState: null, welcomeState: true, contactMethod: ''};\n  this.handleWelcomeChange = this.handleWelcomeChange.bind(this);\n  this.addContactMethod = this.addContactMethod.bind(this);\n}\n  componentDidMount() {\n\n    const { drizzle } = this.props;\n    // subscribe to changes in the store\n    this.unsubscribe = drizzle.store.subscribe(() => {\n      // every time the store updates, grab the state from drizzle\n      const drizzleState = drizzle.store.getState();\n      // check to see if it's ready, if so, update local component state\n      if (drizzleState.drizzleStatus.initialized) {\n        this.setState({ loading: false, drizzleState });\n      }\n\n    });\n  }\n\n  compomentWillUnmount() {\n    this.unsubscribe();\n    //\n  }\n\nhandleWelcomeChange(){\n\n  this.setState({welcomeState:!this.state.welcomeState});\n}\n\naddContactMethod(contactMethod){\n  this.setState({contactMethod:contactMethod});\n}\n\n\n\nrender(){\n  if (this.state.loading) return \"Loading Drizzle...\";\n\nconsole.log(this.state.welcomeState);\n\n  if (this.state.welcomeState){\n  return(\n    <div className=\"App\">\n      <WelcomeScreen\n      drizzle={this.props.drizzle}\n      drizzleState={this.state.drizzleState}\n      handleWelcomeChange={this.handleWelcomeChange}\n\n      />\n      </div>\n  )\n} else {\n  return (\n  <div>\n  <GetContact\n  drizzle={this.props.drizzle}\n  drizzleState={this.state.drizzleState}\n  addContactMethod = {this.addContactMethod}\n  />\n\n  <PriceList\n  drizzle={this.props.drizzle}\n  drizzleState={this.state.drizzleState}\n  />\n  </div>\n)\n}\n\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}