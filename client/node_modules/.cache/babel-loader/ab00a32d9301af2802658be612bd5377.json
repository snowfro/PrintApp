{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Desktop/punkprintapp/client/src/printerAddress.js\";\nimport React from \"react\";\n\nclass PrinterAddress extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKey1: null,\n      dataKey2: null\n    };\n  }\n\n  componentDidMount() {\n    const drizzle = this.props.drizzle;\n    console.log(drizzle);\n    const contract = drizzle.contracts.PunkPrintRegistry; // let drizzle know we want to watch 'sum'\n\n    var dataKey1 = contract.address;\n    console.log(`Address: ${dataKey1}`);\n    var dataKey2 = contract.methods[\"printerAddress\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKey2\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const PunkPrintRegistry = this.props.drizzleState.contracts.PunkPrintRegistry; // using the saved `dataKey`, get the variable we're interested in\n    //const pAddress = PunkPrintRegistry.methods['printerAddress'].cacheCall();\n    //const cAddress = PunkPrintRegistry.contractAddress[this.state.dataKey1];\n\n    const pAddress = PunkPrintRegistry.printerAddress[this.state.dataKey2]; //console.log(pAddress);\n    // if it exists, then we display its value\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"pAddress: \", pAddress && pAddress.value);\n  }\n\n}\n\nexport default PrinterAddress;","map":{"version":3,"sources":["/Users/Erick/Desktop/punkprintapp/client/src/printerAddress.js"],"names":["React","PrinterAddress","Component","state","dataKey1","dataKey2","componentDidMount","drizzle","props","console","log","contract","contracts","PunkPrintRegistry","address","methods","cacheCall","setState","render","drizzleState","pAddress","printerAddress","value"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KADmC;AAAA;;AAE3CC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;AAElBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAMI,QAAQ,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,iBAAnC,CAHkB,CAIlB;;AACA,QAAIT,QAAQ,GAAGO,QAAQ,CAACG,OAAxB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWN,QAAS,EAAjC;AACA,QAAIC,QAAQ,GAAGM,QAAQ,CAACI,OAAT,CAAiB,gBAAjB,EAAmCC,SAAnC,EAAf,CAPkB,CAQlB;;AACA,SAAKC,QAAL,CAAc;AAAGZ,MAAAA;AAAH,KAAd;AACD;;AAAAa,EAAAA,MAAM,GAAG;AACR;AADQ,UAEAL,iBAFA,GAEsB,KAAKL,KAAL,CAAWW,YAAX,CAAwBP,SAF9C,CAEAC,iBAFA,EAIR;AACA;AACA;;AACA,UAAMO,QAAQ,GAAGP,iBAAiB,CAACQ,cAAlB,CAAiC,KAAKlB,KAAL,CAAWE,QAA5C,CAAjB,CAPQ,CASR;AAEA;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAce,QAAQ,IAAIA,QAAQ,CAACE,KAAnC,CAAP;AACD;;AAzB0C;;AA0B5C,eAAerB,cAAf","sourcesContent":["\nimport React from \"react\";\n\nclass PrinterAddress extends React.Component {\n  state = { dataKey1: null, dataKey2: null };\n  componentDidMount() {\n    const { drizzle } = this.props;\n    console.log(drizzle);\n    const contract = drizzle.contracts.PunkPrintRegistry;\n    // let drizzle know we want to watch 'sum'\n    var dataKey1 = contract.address;\n    console.log(`Address: ${dataKey1}`);\n    var dataKey2 = contract.methods[\"printerAddress\"].cacheCall();\n    // save the `dataKey` to local component state for later reference\n    this.setState({  dataKey2 });\n  }render() {\n    // get the contract state from drizzleState\n    const { PunkPrintRegistry } = this.props.drizzleState.contracts;\n\n    // using the saved `dataKey`, get the variable we're interested in\n    //const pAddress = PunkPrintRegistry.methods['printerAddress'].cacheCall();\n    //const cAddress = PunkPrintRegistry.contractAddress[this.state.dataKey1];\n    const pAddress = PunkPrintRegistry.printerAddress[this.state.dataKey2];\n\n    //console.log(pAddress);\n\n    // if it exists, then we display its value\n    return <p>pAddress: {pAddress && pAddress.value}</p>;\n  }\n}export default PrinterAddress;\n"]},"metadata":{},"sourceType":"module"}