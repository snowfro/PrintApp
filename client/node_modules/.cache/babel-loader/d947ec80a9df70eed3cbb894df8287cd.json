{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Desktop/punkprintapp/client/src/printerAddress.js\";\nimport React from \"react\";\n\nclass PrinterAddress extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKey1: null,\n      dataKey2: null\n    };\n  }\n\n  componentDidMount() {\n    const drizzle = this.props.drizzle;\n    const contract = drizzle.contracts.PunkPrintRegistry; // let drizzle know we want to watch these functions\n\n    var dataKey1 = contract.methods[\"printerAddress\"].cacheCall();\n    var dataKey2 = contract.methods[\"name\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKey1,\n      dataKey2\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const PunkPrintRegistry = this.props.drizzleState.contracts.PunkPrintRegistry; // using the saved `dataKey`, get the variable we're interested in\n\n    const pAddress = PunkPrintRegistry.printerAddress[this.state.dataKey1];\n    const cName = PunkPrintRegistry.name[this.state.dataKey2];\n    console.log(this.props); // if it exists, then we display its value\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"pAddress: \", pAddress && pAddress.value, \" | cName: \", cName && cName.value);\n  }\n\n}\n\nexport default PrinterAddress;","map":{"version":3,"sources":["/Users/Erick/Desktop/punkprintapp/client/src/printerAddress.js"],"names":["React","PrinterAddress","Component","state","dataKey1","dataKey2","componentDidMount","drizzle","props","contract","contracts","PunkPrintRegistry","methods","cacheCall","setState","render","drizzleState","pAddress","printerAddress","cName","name","console","log","value"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KADmC;AAAA;;AAE3CC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;AAElB,UAAME,QAAQ,GAAGF,OAAO,CAACG,SAAR,CAAkBC,iBAAnC,CAFkB,CAGlB;;AACA,QAAIP,QAAQ,GAAGK,QAAQ,CAACG,OAAT,CAAiB,gBAAjB,EAAmCC,SAAnC,EAAf;AACA,QAAIR,QAAQ,GAAGI,QAAQ,CAACG,OAAT,CAAiB,MAAjB,EAAyBC,SAAzB,EAAf,CALkB,CAMlB;;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAd;AACD;;AAAAU,EAAAA,MAAM,GAAG;AACR;AADQ,UAEAJ,iBAFA,GAEsB,KAAKH,KAAL,CAAWQ,YAAX,CAAwBN,SAF9C,CAEAC,iBAFA,EAIR;;AACA,UAAMM,QAAQ,GAAGN,iBAAiB,CAACO,cAAlB,CAAiC,KAAKf,KAAL,CAAWC,QAA5C,CAAjB;AACA,UAAMe,KAAK,GAAGR,iBAAiB,CAACS,IAAlB,CAAuB,KAAKjB,KAAL,CAAWE,QAAlC,CAAd;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB,EARQ,CAUR;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcS,QAAQ,IAAIA,QAAQ,CAACM,KAAnC,gBAAoDJ,KAAK,IAAIA,KAAK,CAACI,KAAnE,CAAP;AACD;;AAtB0C;;AAuB5C,eAAetB,cAAf","sourcesContent":["\nimport React from \"react\";\n\nclass PrinterAddress extends React.Component {\n  state = { dataKey1: null, dataKey2: null };\n  componentDidMount() {\n    const { drizzle } = this.props;\n    const contract = drizzle.contracts.PunkPrintRegistry;\n    // let drizzle know we want to watch these functions\n    var dataKey1 = contract.methods[\"printerAddress\"].cacheCall();\n    var dataKey2 = contract.methods[\"name\"].cacheCall();\n    // save the `dataKey` to local component state for later reference\n    this.setState({ dataKey1, dataKey2 });\n  }render() {\n    // get the contract state from drizzleState\n    const { PunkPrintRegistry } = this.props.drizzleState.contracts;\n\n    // using the saved `dataKey`, get the variable we're interested in\n    const pAddress = PunkPrintRegistry.printerAddress[this.state.dataKey1];\n    const cName = PunkPrintRegistry.name[this.state.dataKey2];\n\n    console.log(this.props);\n\n    // if it exists, then we display its value\n    return <p>pAddress: {pAddress && pAddress.value} | cName: {cName && cName.value}</p>;\n  }\n}export default PrinterAddress;\n"]},"metadata":{},"sourceType":"module"}