{"ast":null,"code":"var _jsxFileName = \"/Users/Erick/Desktop/punkprintapp/client/src/name.js\";\nimport React from \"react\";\n\nclass ContractName extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataKey: null\n    };\n  }\n\n  componentDidMount() {\n    const drizzle = this.props.drizzle;\n    const contract = drizzle.contracts.PunkPrintRegistry; // let drizzle know we want to watch 'sum'\n\n    var dataKey = contract.methods[\"name\"].cacheCall(); // save the `dataKey` to local component state for later reference\n\n    this.setState({\n      dataKey\n    });\n  }\n\n  render() {\n    // get the contract state from drizzleState\n    const PunkPrintRegistry = this.props.drizzleState.contracts.PunkPrintRegistry; // using the saved `dataKey`, get the variable we're interested in\n\n    const cName = PunkPrintRegistry.name[this.state.dataKey];\n    console.log(cName); // if it exists, then we display its value\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"cName: \", cName && cName.value);\n  }\n\n}\n\nexport default ContractName;","map":{"version":3,"sources":["/Users/Erick/Desktop/punkprintapp/client/src/name.js"],"names":["React","ContractName","Component","state","dataKey","componentDidMount","drizzle","props","contract","contracts","PunkPrintRegistry","methods","cacheCall","setState","render","drizzleState","cName","name","console","log","value"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADiC;AAAA;;AAEzCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,OADU,GACE,KAAKC,KADP,CACVD,OADU;AAElB,UAAME,QAAQ,GAAGF,OAAO,CAACG,SAAR,CAAkBC,iBAAnC,CAFkB,CAGlB;;AACA,QAAIN,OAAO,GAAGI,QAAQ,CAACG,OAAT,CAAiB,MAAjB,EAAyBC,SAAzB,EAAd,CAJkB,CAKlB;;AACA,SAAKC,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAAAU,EAAAA,MAAM,GAAG;AACR;AADQ,UAEAJ,iBAFA,GAEsB,KAAKH,KAAL,CAAWQ,YAAX,CAAwBN,SAF9C,CAEAC,iBAFA,EAIR;;AACA,UAAMM,KAAK,GAAGN,iBAAiB,CAACO,IAAlB,CAAuB,KAAKd,KAAL,CAAWC,OAAlC,CAAd;AAEAc,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAPQ,CASR;;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWA,KAAK,IAAIA,KAAK,CAACI,KAA1B,CAAP;AACD;;AApBwC;;AAqB1C,eAAenB,YAAf","sourcesContent":["\nimport React from \"react\";\n\nclass ContractName extends React.Component {\n  state = { dataKey: null };\n  componentDidMount() {\n    const { drizzle } = this.props;\n    const contract = drizzle.contracts.PunkPrintRegistry;\n    // let drizzle know we want to watch 'sum'\n    var dataKey = contract.methods[\"name\"].cacheCall();\n    // save the `dataKey` to local component state for later reference\n    this.setState({ dataKey });\n  }render() {\n    // get the contract state from drizzleState\n    const { PunkPrintRegistry } = this.props.drizzleState.contracts;\n\n    // using the saved `dataKey`, get the variable we're interested in\n    const cName = PunkPrintRegistry.name[this.state.dataKey];\n\n    console.log(cName);\n\n    // if it exists, then we display its value\n    return <p>cName: {cName && cName.value}</p>;\n  }\n}export default ContractName;\n"]},"metadata":{},"sourceType":"module"}