{"ast":null,"code":"import _classCallCheck from\"/Users/Erick/Documents/Print Apps/punkprintapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Erick/Documents/Print Apps/punkprintapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Erick/Documents/Print Apps/punkprintapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Erick/Documents/Print Apps/punkprintapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Erick/Documents/Print Apps/punkprintapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';var Canvas=/*#__PURE__*/function(_React$Component){_inherits(Canvas,_React$Component);function Canvas(){_classCallCheck(this,Canvas);return _possibleConstructorReturn(this,_getPrototypeOf(Canvas).apply(this,arguments));}_createClass(Canvas,[{key:\"componentDidMount\",value:function componentDidMount(){var canvas=this.refs.canvas;var punk=canvas.getContext(\"2d\");punk.imageSmoothingEnabled=false;var img=this.refs.image;var punkId=this.props.punkId;img.onload=function(){//punk.drawImage(img, 0, 0);\n//punk.font = \"40px Courier\"\npunk.fillStyle='rgb(99,132,150)';punk.fillRect(0,0,300,300);var lastTwo=parseInt(punkId.toString().slice(-2));var row=0;for(var i=1;i<=100;i++){if(punkId>i*100&&punkId<i*100+100){row=i;}}punk.drawImage(img,lastTwo*24,row*24,24,24,0,0,300,300);};}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"canvas\",{ref:\"canvas\",width:300,height:300}),React.createElement(\"img\",{ref:\"image\",className:\"hidden\",src:require('./punks.png'),alt:\"10,000 CryptoPunks\"}));}}]);return Canvas;}(React.Component);export default Canvas;","map":{"version":3,"sources":["/Users/Erick/Documents/Print Apps/punkprintapp/client/src/canvas.js"],"names":["React","Canvas","canvas","refs","punk","getContext","imageSmoothingEnabled","img","image","punkId","props","onload","fillStyle","fillRect","lastTwo","parseInt","toString","slice","row","i","drawImage","require","Component"],"mappings":"srBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,M,kSAEgB,CAElB,GAAMC,CAAAA,MAAM,CAAG,KAAKC,IAAL,CAAUD,MAAzB,CACA,GAAME,CAAAA,IAAI,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAb,CACAD,IAAI,CAACE,qBAAL,CAA6B,KAA7B,CACA,GAAMC,CAAAA,GAAG,CAAG,KAAKJ,IAAL,CAAUK,KAAtB,CACA,GAAMC,CAAAA,MAAM,CAAG,KAAKC,KAAL,CAAWD,MAA1B,CAEFF,GAAG,CAACI,MAAJ,CAAa,UAAM,CAGf;AACA;AACAP,IAAI,CAACQ,SAAL,CAAiB,iBAAjB,CACAR,IAAI,CAACS,QAAL,CAAc,CAAd,CAAgB,CAAhB,CAAkB,GAAlB,CAAsB,GAAtB,EACA,GAAIC,CAAAA,OAAO,CAAGC,QAAQ,CAACN,MAAM,CAACO,QAAP,GAAkBC,KAAlB,CAAwB,CAAC,CAAzB,CAAD,CAAtB,CAEA,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAE,GAAnB,CAAwBA,CAAC,EAAzB,CAA4B,CAC1B,GAAIV,MAAM,CAACU,CAAC,CAAC,GAAT,EAAgBV,MAAM,CAAEU,CAAC,CAAC,GAAH,CAAQ,GAAnC,CAAwC,CACtCD,GAAG,CAAGC,CAAN,CACD,CACF,CAGDf,IAAI,CAACgB,SAAL,CAAeb,GAAf,CAAoBO,OAAO,CAAC,EAA5B,CAAgCI,GAAG,CAAC,EAApC,CAAuC,EAAvC,CAA2C,EAA3C,CAA+C,CAA/C,CAAkD,CAAlD,CAAqD,GAArD,CAA0D,GAA1D,EAED,CAnBH,CAoBC,C,uCAEM,CACL,MACE,gCACE,8BAAQ,GAAG,CAAC,QAAZ,CAAqB,KAAK,CAAE,GAA5B,CAAiC,MAAM,CAAE,GAAzC,EADF,CAEE,2BAAK,GAAG,CAAC,OAAT,CAAiB,SAAS,CAAC,QAA3B,CAAoC,GAAG,CAAEG,OAAO,CAAC,aAAD,CAAhD,CAAiE,GAAG,CAAC,oBAArE,EAFF,CADF,CAMD,C,oBAvCkBrB,KAAK,CAACsB,S,EA0C3B,cAAerB,CAAAA,MAAf","sourcesContent":["import React from 'react';\n\nclass Canvas extends React.Component {\n\n  componentDidMount() {\n\n    const canvas = this.refs.canvas;\n    const punk = canvas.getContext(\"2d\");\n    punk.imageSmoothingEnabled = false;\n    const img = this.refs.image;\n    const punkId = this.props.punkId;\n\n  img.onload = () => {\n\n\n      //punk.drawImage(img, 0, 0);\n      //punk.font = \"40px Courier\"\n      punk.fillStyle = 'rgb(99,132,150)';\n      punk.fillRect(0,0,300,300)\n      let lastTwo = parseInt(punkId.toString().slice(-2));\n\n      let row = 0;\n      for (let i = 1; i<=100; i++){\n        if (punkId>i*100 && punkId<(i*100)+100) {\n          row = i;\n        }\n      }\n\n\n      punk.drawImage(img, lastTwo*24, row*24,24, 24, 0, 0, 300, 300);\n\n    }\n  }\n\nrender() {\n    return(\n      <div>\n        <canvas ref=\"canvas\" width={300} height={300} />\n        <img ref=\"image\" className=\"hidden\" src={require('./punks.png')} alt=\"10,000 CryptoPunks\"/>\n      </div>\n    )\n  }\n}\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}